%p
  %b アカウント名:
  = @user.name
%p
  %b twitter screen name:
  = link_to @user.twitter, "http://twitter.com/#{@user.twitter}", :target => "_blank"
%p
  %b url:
  = link_to @user.url, @user.url, :target => "_blank"
%p
  %b 外部向け自己紹介:
  = @user.publicabout
%p
  %b 入トロ:
  = @user.joined
- if current_user
  %p
    %b 本名:
    = @user.realname
  %p
    %b パソコンメールアドレス:
    = @user.pcmail
  %p
    %b 携帯メールアドレス:
    = @user.mbmail
  %p
    %b 入学:
    = @user.entered
  %p
    %b 内部向け自己紹介:
    = @user.privateabout
  %p
    %b .userauths.email:
    = @user.userauths.map{|a| a.email }
%p
  %h2 ポスト
  最新10件
  %br/
  - @user.posts.order("id DESC").limit(10).each do |post|
    = link_to post.topic.title || Serie.find_by(topic_id: post.topic.id).name, member_topics_path(post.topic)
    = post.content[0..24]
    %br/
%p
  %h2 ランキング
  - if @do_show_ranking
    - @ranks.each do |rank|
      = rank.ranking.name
      = rank.rank
      位
      = link_to image_tag(serie_image_path(rank.serie, :small), :alt=> rank.serie.name), rank.serie
      = link_to rank.serie.name, rank.serie
      - if rank.serie.authors then
        - rank.serie.authors.each do |author|
          = link_to author.name, series_path(:str => author.name)
      = link_to rank.serie.magazines_series.map{|ms| ms.magazine ? (ms.magazine.name + (ms.placed ? (ms.placed != "" ? "（#{ms.placed}）" : "") : "")) : nil}.compact.uniq.join("　"), edit_member_serie_path(rank.serie)
      - if @user == current_user && @registerable_rankings.map{|r| r.id}.include?(rank.ranking_id)
        = link_to '削除', member_rank_path(rank), :confirm => "#{rank.serie.name} を #{rank.rank} 位から削除していいですか？", :method => :delete, :controller => :ranks
      %br/
  - @registering_rankings.each do |ranking|
    %b{:style => "background-color: yellow;"}= ranking.name + '不十分' if !complete_ranking(ranking, @user)
= link_to 'ユーザー情報を編集する', edit_member_user_path(@user) if @user == current_user
|
\#{link_to 'Back', users_path}
